class e{constructor(){this.imageObserver=null,this.init()}init(){"IntersectionObserver"in window&&(this.imageObserver=new IntersectionObserver((e,s)=>{e.forEach(e=>{if(e.isIntersecting){const r=e.target;this.loadImage(r),s.unobserve(r)}})},{rootMargin:"50px 0px",threshold:.01})),this.observeImages()}observeImages(){document.querySelectorAll("img[data-src]").forEach(e=>{this.imageObserver?this.imageObserver.observe(e):this.loadImage(e)})}loadImage(e){const s=new Image;s.onload=()=>{e.src=e.dataset.src,e.classList.add("loaded"),e.classList.remove("loading")},s.onerror=()=>{e.classList.add("error"),e.classList.remove("loading")},e.classList.add("loading"),s.src=e.dataset.src}observeNewImages(){this.observeImages()}}function s(){return new e}export{s as i};
